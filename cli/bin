#!/usr/bin/env node

const fs = require('fs')
const path = require('path')
const homedir = require('os').homedir()
const spawn = require('child_process').spawn
const argv = require('minimist')(process.argv.slice(2))
const help = require('./help.js')

const pidFile = path.join(homedir, '.nace.pid')
const logFile = path.join(homedir, '.nace.log')
const naceIndex = path.join(__dirname, '../index.js')

switch (argv._[0]) {
  case 'start':
    startNace()
    break
  case 'stop':
    stopNace()
    break
  default:
    help.printHelp()
}

function startNace () {

  // clean logfile
  fs.writeFileSync(logFile, '')

  const outFD = fs.openSync(logFile, 'a')
  const errFD = fs.openSync(logFile, 'a')

  // start the engine
  const child = spawn(process.argv[0], [naceIndex], {
    detached: true,
    stdio: ['ipc', outFD, errFD]
  })
  child.unref()

  // pidfile
  fs.writeFileSync(pidFile, child.pid)

  console.log(child.pid, logFile)
}

function stopNace () {
  const pkill = require('child_process').spawnSync('pkill', ['-F', pidFile], {
    timeout: 1000
  })
  process.exit(pkill.status)
}

process.exit()
